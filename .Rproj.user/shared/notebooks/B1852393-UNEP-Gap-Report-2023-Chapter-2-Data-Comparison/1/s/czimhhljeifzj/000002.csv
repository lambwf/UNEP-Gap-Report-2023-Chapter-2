"0",""
"0","## Aggregations"
"0",""
"0","country_aggregations <- read.csv(""https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/unfccc.csv"") %>% "
"0","  select(Code)"
"0",""
"0","country_aggregations <- left_join(country_aggregations,                                  read.csv(""https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/ldc.csv"") %>% "
"0","                                    select(Code) %>% "
"0","                                    mutate(LDC=1),by = ""Code"")"
"0",""
"0","country_aggregations <- left_join(country_aggregations,                                  read.csv(""https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/european-union.csv"") %>% "
"0","                                    select(Code) %>% "
"0","                                    mutate(EU=1),by = ""Code"")"
"0",""
"0","country_aggregations <- left_join(country_aggregations,                                  read.csv(""https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/g20.csv"") %>% "
"0","                                    select(Code) %>% "
"0","                                    mutate(G20=1),by = ""Code"")"
"0",""
"0","country_aggregations <- left_join(country_aggregations,                                  read.csv(""https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/sids.csv"") %>% "
"0","                                    select(Code) %>% "
"0","                                    mutate(SIDS=1),by = ""Code"")"
"0",""
"0","country_aggregations <- country_aggregations %>% "
"0","  rename(iso=Code)"
"0","  "
"0",""
"0","## figure style"
"0",""
"0","theme_wl <- function() {"
"0","  "
"0","  font <- ""sans"""
"0","  "
"0","  theme_bw() %+replace%"
"0","    "
"0","    theme("
"0","      "
"0","      # Grid elements"
"0","      "
"0","      panel.grid.minor = element_blank(),    #strip minor gridlines"
"0","      axis.ticks = element_line(color=""#636363"",size = 0.7),          #strip axis ticks"
"0","      "
"0","      "
"0","      # Border lines"
"0","      panel.border = element_rect(color=""#636363"",fill=NA,size = 0.7),"
"0","      panel.background = element_blank(),"
"0","      "
"0","      # Text elements"
"0","      "
"0","      plot.title = element_text(             #title"
"0","        family = font,            #set font family"
"0","        size = 13,                #set font size"
"0","        face = 'bold',            #bold typeface"
"0","        hjust = 0,                #left align"
"0","        vjust = 3,                #raise slightly"
"0","        color = '#636363'),       #color"
"0","      "
"0","      plot.subtitle = element_text("
"0","        family = font,"
"0","        size = 11,"
"0","        hjust = 0,"
"0","        vjust = 2,"
"0","        color = '#636363'),"
"0","      "
"0","      plot.caption = element_text(           #caption"
"0","        family = font,            #font family"
"0","        size = 9,                 #font size"
"0","        hjust = 0,                #right align"
"0","        color = '#bdbdbd'),       #color"
"0","      "
"0","      axis.title = element_text(             #axis titles"
"0","        family = font,            #font family"
"0","        size = 10,                #font size"
"0","        color = '#636363'),       #color"
"0","      "
"0","      axis.text = element_text(              #axis text"
"0","        family = font,            #axis famuly"
"0","        size = 9,                 #font size"
"0","        color = '#636363'),       #color"
"0","      "
"0","      axis.text.x = element_text(            #margin for axis text"
"0","        margin=margin(5, b = 10)),"
"0","      "
"0","      text = element_text("
"0","        family = font,"
"0","        color = '#636363')"
"0","      "
"0","    )"
"0","  "
"0","}"
"0",""
"0",""
"0","custom_color_scale <- function(no_colors) {"
"0","  "
"0","  colors = colorRampPalette(brewer.pal(8, ""Set2""))(no_colors)"
"0","  "
"0","}"
"0",""
"0",""
"0","## location of % shares in stacked figures"
"0",""
"0","locate_shares <- function(data,grouping,years){"
"0",""
"0","  shares <- data %>%"
"0","    arrange_at(vars(`year`,all_of(grouping))) %>%"
"0","    mutate(location=value/2)"
"0","  "
"0","  z = length(unique(shares[,grouping]))"
"0","  "
"0","  for (j in seq(0,z*(years-1),z)) {"
"0","    # for every region"
"0","    for (i in 1:z) {"
"0","      if (i != z) {"
"0","        shares$location[i+j] = shares$location[i+j] + sum(shares$value[i+1+j:(z-i+j-1)])"
"0","        #shares$location[i] = shares$location[i] + sum(shares$value[i+1:(z-i))])"
"0","        "
"0","      }"
"0","    }"
"0","  }"
"0",""
"0","  return(shares)"
"0","}"
"0",""
"0",""
"0","## growth rate calculation"
"0",""
"0","growth_rate <- function(years,y) {"
"0","  "
"0","  data <- data.frame(years,y)"
"0","  "
"0","  data <- data %>%"
"0","    mutate(leap_years = leap_year(years)) %>%"
"0","    mutate(adjusted = ifelse(leap_years==TRUE,y*365/366,y))"
"0","  data <- data %>%"
"0","    mutate(y=adjusted)"
"0",""
"0","  fit <- lm(log(y) ~ years,data = data)"
"0","  "
"0","  data <- data %>% "
"0","    mutate(rate=fit$coefficients[2]) %>% "
"0","    mutate(predicted_x = exp(predict(fit,data %>% select(years)))) %>% "
"0","    mutate(st_error = sqrt(diag(vcov(fit)))[2])"
"0","  "
"0","  return(list(""rate""=fit$coefficients[2],""data""=data))"
"0","}"
"0",""
